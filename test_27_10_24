# начало програмы

# Задача 1

# План: 

# 1) запросить у пользователя начало отрезка и конец

# 2) реализовать проверку, пользователь не может вводить
# числа меньше 0 и больше 1000

# 3) датчик случайных чисел генерирует 10 чисел в 
# диапазоне от 0 до 1000

# 4) подсчитать числа и вывести их

import random


# тут запрашиваем числа у пользователя

print('''
       Привет! Будем делать отрезок в диапазоне

          от 0 до 1000! Говори мне два числа!''')

print()

while True:
    a = int(input('Введи первое число: '))

    print()
    
    if a < 0 or a > 1000:
        print("Читаешь плохо! Число должно быть от 0 до 1000!")
        print()
    else:
        break
print()

while True:
    b = int(input('Введи второе число: '))
    
    if b < 0 or b > 1000:
        print("Читаешь плохо! Число должно быть от 0 до 1000!")
    else:
        break
# Определяем где минимум где максимум

if a > b:
    first_number = b
    second_number = a
else:
    first_number = a
    second_number = b

print()

print(f'Получился отрезок от {first_number} до {second_number}')

print()

# Тут генирируем 10 случайных чисел

# Можно было бы воспользоваться обычным циклом и методом aapend
# но количество символов больше чем если использовать
# списковое включение ( 61 символ против 101)

# Я выбрал списковое включение

ten_random_numbers = [random.randint(0, 1000) 
                      for _ in range(10)] # где то я слышал
# если переменная в теле цикла не используется, то ставят 
# нижнее подчеркивание (кажется в книге 'Python и DevOps ключ
# к автоматизации Linux')

print(f'Узри случайные числа: {ten_random_numbers}')

print()

# Тут выявляем числа, попавшие в диапазон
# цикл проходи по всем элементам списка ten_random_number и добавляет
# значения прошедшие проверку в  новый список

numbers_in_range = [number for number in ten_random_numbers if first_number <= number <= second_number]

# Вывод результатов

print(f'Числа, попавшие в отрезок: {numbers_in_range}')

print()

print(f'Количество чисел из отрезка: {len(numbers_in_range)}')

print()


# конец программы
